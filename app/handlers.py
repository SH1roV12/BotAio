import random
from aiogram import Router, Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.filters import CommandStart
from aiogram.types import message
import app.keyboard as kb # type: ignore
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import requests
from app.states import GetWeather



router = Router()






@router.message(CommandStart())
async def start_com(message: types.message):
    await message.reply_animation(animation = "https://media1.tenor.com/m/-NJHCQmv_fwAAAAC/excessive-heat-warning-sunshine.gif", caption = "–ü—Ä–∏–≤–µ—Ç,—ç—Ç–æ –Ω–æ–≤—ã–π  –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–≥–æ–¥—ã",
                        reply_markup=kb.main)


@router.message(F.photo)
async def photo(message: types.message):
    await message.answer(f"ID photo: {message.photo[-1].file_id}")

@router.message(F.sticker)
async def sticker(message: types.message):
    await message.answer(message.sticker.file_id)






@router.message(Command("give"))
async def start_com(message: types.message):
    await message.answer_photo(photo= "https://s0.rbk.ru/v6_top_pics/resized/600xH/media/img/1/18/347128400924181.webp")

    
@router.message(F.text == "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüå§Ô∏è")
async def weth(message:types.message, state:FSMContext):
    await state.set_state(GetWeather.city)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É")


@router.message(GetWeather.city)
async def weth2(message: types.message, state:FSMContext):
    city = message.text 
    try:
        url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid=658467b0637594e3e8cb8360fcd8e8b2'
        weather_data = requests.get(url).json()
        temp = round(weather_data['main']['temp'])
        temp_feels = weather_data['main']['feels_like']
        wind_speed = weather_data['wind']['speed']
        temp -= 275.45
        temp_feels -= 275.45
        await message.answer_animation(animation ='https://media.tenor.com/z5gDoFCYzNQAAAAi/we-support-clean-energy-jobs-climate-action-now.gif',caption = (f"--------------–ü–æ–≥–æ–¥–∞ –≤ {city}---------------\n"
                            f"----–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –í–æ–∑–¥—É—Ö–∞:{round(temp)}----\n"
                            f'\n'
                            f'---–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {round(temp_feels)}---\n'
                            f'\n'
                            f'--–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed}--'
                            ))
    except KeyError:
          await message.answer('–ù–µ –Ω–∞–π–¥–µ–Ω –≥–æ—Ä–æ–¥')
    await state.clear()
    



@router.message()
async def echo(message: types.message):
    text = message.text.lower()

    if text in ["–∫—É", "–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π"]:
        await message.answer("–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç")
    elif text == "–ø–æ–∫–∞":
        await message.reply("–ø–æ–∫–µ–¥–∞") 
    elif text == "–¥–∏–±–∏–ª":
        await message.answer_sticker(sticker = "CAACAgIAAxkBAAPvZsyLM9Ygm8r_YamGqHhKFPSQxQMAAo9RAAJ50slIAZYhb3_NSJ41BA")
    elif text == "—Å–ø–∞—Å–∏–±–æ":
        message.answer("–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞üòä")   
    else:
        await message.answer("–ü—Ä–æ—Å—Ç–∏—Ç–µ,–Ω–æ —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é(", reply_markup = kb.main)